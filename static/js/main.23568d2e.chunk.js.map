{"version":3,"sources":["images/werewolf.png","images/villager.png","components/Header.js","components/FooterButtons.js","components/Form1.js","components/Form2.js","components/GameButton.js","components/GameText.js","components/PopUp.js","components/NightForm.js","components/DayForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","FooterButtons","props","onClick","playagain","rules","Form1","players","map","player","name","style","display","onChange","event","target","value","type","placeholder","Form2","handleChange","p","x","htmlFor","role","id","GameButton","length","callPopUp","buttonText","GameText","text","PopUp","popUpText","NightForm","alive","handleKill","DayForm","handleKick","App","useState","inputText","setInputText","setPlayers","gameButtonText","setGameButtonText","handleClickGameButton","gameButtonFunc","setGameButtonFunc","gameButtonDisplay","setGameButtonDisplay","visibilityForm1","setVisibilityForm1","visibilityForm2","setVisibilityForm2","visibilityGameText","setVisibilityGameText","gameText","setGameText","popupDisplay","setPopupDisplay","nightFormDisplay","setNightFormDisplay","bgColor","setBgColor","killSelected","setKillSelected","dayFormDisplay","setDayFormDisplay","kickSelected","setKickSelected","popUpButtonText","setPopUpButtonText","popUpButton","popUpFunc","setPopUpFunc","setPopUptext","playAgain","night","checkWolvesWin","villagersAlive","push","checkVillagersWin","wolvesAlive","villagerAlive","document","body","preventDefault","console","log","currentInputText","options","selectedIndex","src","Werewolf","alt","width","height","Villager","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,8KCa5BC,MAXf,WACI,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,cAAd,oCACA,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,aAAd,iBCIDC,MATf,SAAuBC,GACnB,OACI,yBAAKF,UAAU,oBACX,4BAAQG,QAASD,EAAME,UAAWJ,UAAU,gBAA5C,eACA,4BAAQG,QAASD,EAAMG,MAAOL,UAAU,gBAAxC,WCmBGM,MAvBf,SAAeJ,GAUX,IAAMK,EAAUL,EAAMK,QAAQC,KAAI,SAAAC,GAC9B,OAAQ,uBAAGT,UAAU,SAASS,EAAOC,SAGzC,OACI,0BAAMC,MAAO,CAACC,QAASV,EAAMU,SAAUZ,UAAU,QAC7C,2BAAOa,SAdf,SAAsBC,GAClBZ,EAAMW,SAASC,EAAMC,OAAOC,QAaOhB,UAAU,QAAQiB,KAAK,OAAOC,YAAY,aAAaF,MAAOd,EAAMc,QACnG,4BAAQb,QAXhB,SAAqBW,GACjBZ,EAAMC,QAAQW,IAUoBd,UAAU,eAAxC,KACCO,ICQEY,MA1Bf,SAAejB,GAEX,SAASkB,EAAaN,GAClBZ,EAAMW,SAASC,GAGnB,IAAMO,EAAInB,EAAMK,QAAQC,KAAI,SAAAc,GAC5B,OAAO,0BAAMtB,UAAU,eACf,2BAAOA,UAAU,QAAQuB,QAASD,EAAEZ,MAAOY,EAAEZ,MAC7C,4BAAQV,UAAU,UAAUgB,MAAOM,EAAEE,KAAMX,SAAUO,EAAcK,GAAIH,EAAEZ,MACrE,4BAAQC,MAAO,CAACC,QAAS,SAAzB,iBACA,4BAAQa,GAAG,YAAX,YACA,4BAAQA,GAAG,YAAX,YACA,4BAAQA,GAAG,SAAX,SACA,4BAAQA,GAAG,QAAX,aAKZ,OACI,yBAAKzB,UAAU,OAAOW,MAAO,CAACC,QAASV,EAAMU,UACxCS,ICJEK,MAjBf,SAAoBxB,GAUhB,OACI,yBAAKS,MAAO,CAACC,QAASV,EAAMU,SAAUZ,UAAU,aAC5C,4BAAQG,QAVhB,WACQD,EAAMK,QAAQoB,OAAS,EACvBzB,EAAMC,UAEND,EAAM0B,aAMyB5B,UAAU,UAAUE,EAAM2B,cCJtDC,MARf,SAAkB5B,GACd,OACI,yBAAKF,UAAU,cAAcW,MAAO,CAACC,QAASV,EAAMU,UAChD,wBAAIZ,UAAU,aAAaE,EAAM6B,QCM9BC,MATf,SAAe9B,GACX,OACI,yBAAKS,MAAO,CAACC,QAASV,EAAMU,SAAUZ,UAAU,SAC5C,uBAAGA,UAAU,eAAeE,EAAM+B,WAClC,4BAAQjC,UAAU,eAAeG,QAASD,EAAMC,SAAUD,EAAM6B,QC4B7DG,MAhCf,SAAmBhC,GAUf,IAAMmB,EAAInB,EAAMK,QAAQC,KAAI,SAAAc,GACxB,MAAe,aAAXA,EAAEE,OAAmC,IAAZF,EAAEa,MACnB,4BAAQV,GAAIH,EAAEZ,MAAOY,EAAEZ,MAE3B,MAGZ,OACI,yBAAKC,MAAO,CAACC,QAASV,EAAMU,SAAUZ,UAAU,QAC5C,8BACI,2BAAOA,UAAU,SAAjB,sCACA,4BAAQA,UAAU,UAAUa,SAnBxC,SAAsBC,GAClBZ,EAAMW,SAASC,IAkB6CW,GAAG,SAAST,MAAOd,EAAMc,OACzE,4BAAQL,MAAO,CAACC,QAAS,SAAzB,sBACCS,GAEL,6BACA,4BAAQrB,UAAU,SAASyB,GAAG,cAActB,QApBxD,SAAcW,GACVZ,EAAMkC,WAAWtB,KAmBT,WCMDuB,MAhCf,SAAiBnC,GAUb,IAAMmB,EAAInB,EAAMK,QAAQC,KAAI,SAAAC,GACxB,OAAqB,IAAjBA,EAAO0B,MACC,4BAAQV,GAAIhB,EAAOC,MAAOD,EAAOC,MAEtC,MAGX,OACI,yBAAKV,UAAU,OAAOW,MAAO,CAACC,QAASV,EAAMU,UACzC,8BACI,2BAAOZ,UAAU,SAAjB,sCACA,4BAAQA,UAAU,UAAUyB,GAAG,SAASZ,SAnBpD,SAAsBC,GAClBZ,EAAMW,SAASC,KAmBH,4BAAQH,MAAO,CAACC,QAAS,SAAzB,sBACCS,GAEL,6BACA,4BAAQrB,UAAU,SAASyB,GAAG,cAActB,QApBxD,SAAcW,GACVZ,EAAMoC,WAAWxB,KAmBT,W,gCCmNDyB,MA/Nf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEiBF,mBAAS,IAF1B,mBAENjC,EAFM,KAEGoC,EAFH,OAG+BH,mBAAS,kBAHxC,mBAGNI,EAHM,KAGUC,EAHV,OAI+BL,oBAAS,SAAAlB,GAAC,OAAIwB,MAJ7C,mBAINC,EAJM,KAIUC,EAJV,OAKqCR,mBAAS,SAL9C,mBAKNS,EALM,KAKaC,EALb,OAMiCV,mBAAS,SAN1C,mBAMNW,EANM,KAMWC,EANX,OAOiCZ,mBAAS,QAP1C,mBAONa,EAPM,KAOWC,EAPX,OAQuCd,mBAAS,QARhD,mBAQNe,EARM,KAQcC,EARd,OASmBhB,mBAAS,cAT5B,mBASNiB,EATM,KASIC,EATJ,OAU2BlB,mBAAS,QAVpC,mBAUNmB,EAVM,KAUQC,GAVR,QAWmCpB,mBAAS,QAX5C,qBAWNqB,GAXM,MAWYC,GAXZ,SAYiBtB,mBAAS,qBAZ1B,qBAYNuB,GAZM,MAYGC,GAZH,SAa2BxB,mBAAS,IAbpC,qBAaNyB,GAbM,MAaQC,GAbR,SAc+B1B,mBAAS,QAdxC,qBAcN2B,GAdM,MAcUC,GAdV,SAe2B5B,mBAAS,IAfpC,qBAeN6B,GAfM,MAeQC,GAfR,SAgBiC9B,mBAAS,OAhB1C,qBAgBN+B,GAhBM,MAgBWC,GAhBX,SAiBqBhC,oBAAS,SAAAlB,GAAC,OAAImD,MAjBnC,qBAiBNC,GAjBM,MAiBKC,GAjBL,SAkBqBnC,mBAAS,SAlB9B,qBAkBNP,GAlBM,MAkBK2C,GAlBL,MAoBb,SAASC,KACPjB,GAAgB,QAChBlB,EAAa,IACbC,EAAW,IACXE,EAAkB,kBAClBG,GAAkB,SAAA1B,GAAC,OAAIwB,MACvBI,EAAqB,SACrBE,EAAmB,SACnBE,EAAmB,QACnBE,EAAsB,QACtBE,EAAY,cACZI,GAAoB,QACpBE,GAAW,qBACXE,GAAgB,IAChBE,GAAkB,QAClBE,GAAgB,IAChBE,GAAmB,OACnBG,IAAa,SAAArD,GAAC,OAAImD,MAsBpB,SAAS3B,KACPM,EAAmB,QACnBE,EAAmB,SACnBT,EAAkB,YAClBG,GAAkB,SAAA1B,GAAC,OAAIwD,MACvBtB,EAAsB,UAGxB,SAASsB,KACPpB,EAAY,gBACZJ,EAAmB,QACnBQ,GAAoB,SACpBE,GAAW,oBACXd,EAAqB,QAGvB,SAASuB,KACPb,GAAgB,QA6ClB,SAASmB,KACP,IAAIC,EAAiB,GACrBzE,EAAQC,KAAI,SAAAc,GACK,aAAXA,EAAEE,OAAmC,IAAZF,EAAEa,OAC7B6C,EAAeC,KAAK3D,EAAEZ,SAGI,IAA1BsE,EAAerD,QACjB6C,GAAmB,eACnBI,GAAa,mBACbD,IAAa,SAAArD,GAAC,OAAIuD,MAClBjB,GAAgB,WAyDlBF,EAAY,cACZM,GAAW,qBACXI,GAAkB,SAClBlB,EAAqB,SAtDvB,SAASgC,KACP,IAAIC,EAAc,GACdC,EAAgB,GACpB7E,EAAQC,KAAI,SAAAc,GACK,aAAXA,EAAEE,OAAmC,IAAZF,EAAEa,MAC7BgD,EAAYF,KAAK3D,EAAEZ,MACC,aAAXY,EAAEE,OAAmC,IAAZF,EAAEa,OACpCiD,EAAcH,KAAK3D,EAAEZ,SAGE,IAAvByE,EAAYxD,QACd6C,GAAmB,eACnBI,GAAa,kBACbD,IAAa,SAAArD,GAAC,OAAIuD,MAClBjB,GAAgB,UACkB,IAAzBwB,EAAczD,QACvB6C,GAAmB,eACnBI,GAAa,mBACbD,IAAa,SAAArD,GAAC,OAAIuD,MAClBjB,GAAgB,UAEhBkB,KA4CJ,OADAO,SAASC,KAAK3E,MAAQoD,GAEpB,6BACE,kBAAC,EAAD,MAIA,kBAAC,EAAD,CAAUhC,KAAM0B,EAAU7C,QAAS2C,IACnC,kBAAC,EAAD,CAAO3C,QAASuC,EAAiB5C,QAASA,EAASJ,QAtKvD,SAA0BW,GACxBA,EAAMyE,iBACNC,QAAQC,IAAIhD,EAAUd,QACG,IAArBc,EAAUd,QAA8B,MAAdc,GAAmC,OAAdA,GAAoC,QAAdA,GACvE+B,GAAmB,OACnBI,GAAa,+BACbD,IAAa,SAAArD,GAAC,OAAImD,MAClBb,GAAgB,SAChBlB,EAAa,MAEbC,EAAW,GAAD,mBAAKpC,GAAL,CAAc,CAACG,KAAM+B,EAAWjB,KAAM,OAAQW,OAAM,MAC9DO,EAAa,MA2JiE1B,MAAOyB,EAAW5B,SA1KpG,SAAuBG,GACrB0B,GAAa,SAAAgD,GAAgB,OAAI1E,QA0K/B,kBAAC,EAAD,CAAOH,SA7HX,SAA2BC,GACzB,IAAIE,EAAQF,EAAMC,OAAOC,MACzB2B,EAAWpC,EAAQC,KAAI,SAAAC,GAIrB,OAHIA,EAAOC,OAASI,EAAMC,OAAOU,KAC/BhB,EAAOe,KAAOR,GAETP,OAuH6BG,QAASyC,EAAiB9C,QAASA,IACvE,kBAAC,EAAD,CAAW6B,WAhHf,SAAoBtB,GAClBA,EAAMyE,iBACe,KAAjBtB,IACFtB,EAAWpC,EAAQC,KAAI,SAAAC,GAIrB,OAHIA,EAAOC,OAASuD,KAClBxD,EAAO0B,OAAQ,GAEV1B,MAETqD,GAAoB,QACpBJ,EAAYO,mBACZjB,GAAkB,SAAA1B,GAAC,OAAIyD,MACvB7B,EAAqB,WAErBsB,GAAmB,OACnBI,GAAa,6BACbD,IAAa,SAAArD,GAAC,OAAImD,MAClBb,GAAgB,WA+FmB5C,MAAOiD,GAAcpD,SApH5D,SAA+BC,GAC7BoD,GAAgBpD,EAAMC,OAAO4E,QAAQ7E,EAAMC,OAAO6E,eAAenE,KAmH0BlB,QAASA,EAASK,QAASiD,KACpH,kBAAC,EAAD,CAASvB,WA9Cb,SAAoBxB,GAClBA,EAAMyE,iBACe,KAAjBlB,IACF1B,EAAWpC,EAAQC,KAAI,SAAAC,GAIrB,OAHIA,EAAOC,OAAS2D,KAClB5D,EAAO0B,OAAQ,GAEV1B,MAET2D,GAAkB,QAClBV,EAAYW,mBACZnB,EAAqB,SACrBF,GAAkB,SAAA1B,GAAC,OAAI4D,QAEvBV,GAAmB,OACnBI,GAAa,6BACbD,IAAa,SAAArD,GAAC,OAAImD,MAClBb,GAAgB,WA6BiB/C,SAlDrC,SAA6BC,GAC3BwD,GAAgBxD,EAAMC,OAAO4E,QAAQ7E,EAAMC,OAAO6E,eAAenE,KAiDClB,QAASA,EAASK,QAASuD,KAC3F,kBAAC,EAAD,CAAYvC,UAnBhB,WACE4C,GAAmB,OACnBI,GAAa,mDACbD,IAAa,SAAArD,GAAC,OAAImD,MAClBb,GAAgB,UAeoBrD,QAASA,EAASK,QAASqC,EAAmBpB,WAAYe,EAAgBzC,QAAS4C,IACrH,yBAAK/C,UAAU,gBAAgB6F,IAAKC,IAAUC,IAAI,WAAWC,MAAM,QAAQC,OAAO,UAClF,yBAAKjG,UAAU,gBAAgB6F,IAAKK,IAAUH,IAAI,WAAWC,MAAM,QAAQC,OAAO,UAClF,kBAAC,EAAD,CAAe7F,UAAWyE,GAAWxE,MA1IzC,WACEmE,GAAmB,OACnBI,GAAa,SACbD,IAAa,SAAArD,GAAC,OAAImD,MAClBb,GAAgB,YAuId,kBAAC,EAAD,CAAO3B,UAAWA,GAAWF,KAAMwC,GAAiBpE,QAASuE,GAAW9D,QAAS+C,MC9NnEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASsB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3B,QAAQ2B,MAAMA,EAAMC,c","file":"static/js/main.23568d2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/werewolf.2c9f61d1.png\";","module.exports = __webpack_public_path__ + \"static/media/villager.a752d286.png\";","import React from \"react\"\n\nfunction Header() {\n    return(\n        <div className=\"headerDiv\">\n            <h1 className=\"headerText\">The Werewolves of Millers Hollow</h1>\n            <div className=\"signature_div\">\n                <h3 className=\"signature\">Simon Ugor</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nfunction FooterButtons(props) {\n    return(\n        <div className=\"footerButtonsDiv\">\n            <button onClick={props.playagain} className=\"footerButton\">Play Again!</button>\n            <button onClick={props.rules} className=\"footerButton\">Rules</button>\n        </div>\n    )\n}\n\nexport default FooterButtons","import React from \"react\"\n\nfunction Form1(props) {\n\n    function callOnChange(event) {\n        props.onChange(event.target.value)\n    }\n\n    function callOnClick(event) {\n        props.onClick(event)\n    }\n\n    const players = props.players.map(player =>{\n        return (<p className=\"label\">{player.name}</p>)\n    })\n\n    return(\n        <form style={{display: props.display}} className=\"form\">\n            <input onChange={callOnChange} className=\"input\" type=\"text\" placeholder=\"Add player\" value={props.value}></input>\n            <button onClick={callOnClick} className=\"form_button\">+</button>\n            {players}\n        </form>\n    )\n}\n\nexport default Form1","import React from \"react\"\n\nfunction Form2(props) {\n\n    function handleChange(event) {\n        props.onChange(event)\n    }\n\n    const p = props.players.map(x => {\n    return(<form className=\"select_form\">\n            <label className=\"label\" htmlFor={x.name}>{x.name}</label>\n            <select className=\"option1\" value={x.role} onChange={handleChange} id={x.name}>\n                <option style={{display: \"none\"}}>Select a role</option>\n                <option id=\"Villager\">Villager</option>\n                <option id=\"Werewolf\">Werewolf</option>\n                <option id=\"Witch\">Witch</option>\n                <option id=\"Seer\">Seer</option>\n            </select>\n            </form>)\n    })\n\n    return(\n        <div className=\"form\" style={{display: props.display}}>\n            {p}\n        </div>\n    )\n}\n\nexport default Form2","import React from \"react\"\n\nfunction GameButton(props) {\n\n    function countPlayers() {\n        if (props.players.length > 5) {\n            props.onClick()\n        } else {\n            props.callPopUp()\n        }\n    }\n\n    return(\n        <div style={{display: props.display}} className=\"buttonDiv\">\n            <button onClick={countPlayers} className=\"button\">{props.buttonText}</button>\n        </div>\n    )\n}\n\nexport default GameButton","import React from \"react\"\n\nfunction GameText(props) {\n    return(\n        <div className=\"gameTextDiv\" style={{display: props.display}}>\n            <h2 className=\"gameText1\">{props.text}</h2>\n        </div>\n    )\n}\n\nexport default GameText","import React from \"react\"\n\nfunction PopUp(props) {\n    return(\n        <div style={{display: props.display}} className=\"popup\">\n            <p className=\"pop_up_text\">{props.popUpText}</p>\n            <button className=\"footerButton\" onClick={props.onClick}>{props.text}</button>\n        </div>\n    )\n}\n\nexport default PopUp","import React from \"react\"\n\nfunction NightForm(props) {\n\n    function handleChange(event) {\n        props.onChange(event)\n    }\n\n    function kill(event) {\n        props.handleKill(event)\n    }\n\n    const p = props.players.map(x => {\n        if (x.role === \"Villager\" && x.alive === true) {\n            return (<option id={x.name}>{x.name}</option>)\n        }\n        return (\"\")\n    })\n\n    return(\n        <div style={{display: props.display}} className=\"form\">\n            <form>\n                <label className=\"label\">Who did Werewolves decide to kill?</label>\n                <select className=\"option1\" onChange={handleChange} id=\"tokill\" value={props.value}>\n                    <option style={{display: \"none\"}}>Select who to kill</option>\n                    {p}\n                </select>\n                <br />\n                <button className=\"button\" id=\"kill_button\" onClick={kill}>Kill</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NightForm","import React from \"react\"\n\nfunction DayForm(props) {\n\n    function handleChange(event) {\n        props.onChange(event)\n    }\n\n    function kick(event) {\n        props.handleKick(event)\n    }\n\n    const p = props.players.map(player => {\n        if (player.alive === true) {\n            return (<option id={player.name}>{player.name}</option>)\n        }\n        return \"\"\n    })\n\n    return(\n        <div className=\"form\" style={{display: props.display}}>\n            <form>\n                <label className=\"label\">Who did Villagers decided to kick?</label>\n                <select className=\"option1\" id=\"tokick\" onChange={handleChange}>\n                    <option style={{display: \"none\"}}>Select who to kill</option>\n                    {p}\n                </select>\n                <br />\n                <button className=\"button\" id=\"kick_button\" onClick={kick}>Kick</button>\n            </form>\n        </div>\n    )\n}\n\nexport default DayForm","import React, {useState} from 'react';\nimport './App.css';\n//importing components\nimport Header from \"./components/Header\"\nimport FooterButtons from \"./components/FooterButtons\"\nimport Form1 from \"./components/Form1\"\nimport Form2 from \"./components/Form2\"\nimport GameButton from \"./components/GameButton\"\nimport GameText from \"./components/GameText\"\nimport PopUp from \"./components/PopUp\"\nimport NightForm from \"./components/NightForm\"\nimport DayForm from \"./components/DayForm\"\n//importing images\nimport Werewolf from \"./images/werewolf.png\"\nimport Villager from \"./images/villager.png\"\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\")\n  const [players, setPlayers] = useState([])\n  const [gameButtonText, setGameButtonText] = useState(\"Start the game\")\n  const [gameButtonFunc, setGameButtonFunc] = useState(x => handleClickGameButton)\n  const [gameButtonDisplay, setGameButtonDisplay] = useState(\"block\")\n  const [visibilityForm1, setVisibilityForm1] = useState(\"block\")\n  const [visibilityForm2, setVisibilityForm2] = useState(\"none\")\n  const [visibilityGameText, setVisibilityGameText] = useState(\"none\")\n  const [gameText, setGameText] = useState(\"Pick roles\")\n  const [popupDisplay, setPopupDisplay] = useState(\"none\")\n  const [nightFormDisplay, setNightFormDisplay] = useState(\"none\")\n  const [bgColor, setBgColor] = useState(\"background: white\")\n  const [killSelected, setKillSelected] = useState(\"\")\n  const [dayFormDisplay, setDayFormDisplay] = useState(\"none\")\n  const [kickSelected, setKickSelected] = useState(\"\")\n  const [popUpButtonText, setPopUpButtonText] = useState(\"OK!\")\n  const [popUpFunc, setPopUpFunc] = useState(x => popUpButton)\n  const [popUpText, setPopUptext] = useState(\"Rules\")\n\n  function playAgain() {\n    setPopupDisplay(\"none\")\n    setInputText(\"\")\n    setPlayers([])\n    setGameButtonText(\"Start the game\")\n    setGameButtonFunc(x => handleClickGameButton)\n    setGameButtonDisplay(\"block\")\n    setVisibilityForm1(\"block\")\n    setVisibilityForm2(\"none\")\n    setVisibilityGameText(\"none\")\n    setGameText(\"Pick roles\")\n    setNightFormDisplay(\"none\")\n    setBgColor(\"background: white\")\n    setKillSelected(\"\")\n    setDayFormDisplay(\"none\")\n    setKickSelected(\"\")\n    setPopUpButtonText(\"OK!\")\n    setPopUpFunc(x => popUpButton)\n  }\n\n  function onChangeForm1(value) {\n    setInputText(currentInputText => value)\n  }\n\n  function handleClickForm1(event) {\n    event.preventDefault()\n    console.log(inputText.length)\n    if (inputText.length === 0 || inputText === \" \" || inputText === \"  \" || inputText === \"   \") {\n      setPopUpButtonText(\"OK!\")\n      setPopUptext(\"Players name can't be blank\")\n      setPopUpFunc(x => popUpButton)\n      setPopupDisplay(\"block\")\n      setInputText(\"\")\n    } else {\n      setPlayers([...players, {name: inputText, role: \"none\", alive:true}])\n      setInputText(\"\")\n    }\n  }\n\n  function handleClickGameButton() {\n    setVisibilityForm1(\"none\")\n    setVisibilityForm2(\"block\")\n    setGameButtonText(\"Continue\")\n    setGameButtonFunc(x => night)\n    setVisibilityGameText(\"inline\")\n  }\n\n  function night() {\n    setGameText(\"Night Phase!\")\n    setVisibilityForm2(\"none\")\n    setNightFormDisplay(\"block\")\n    setBgColor(\"background: gray\")\n    setGameButtonDisplay(\"none\")\n  }\n\n  function popUpButton() {\n    setPopupDisplay(\"none\")\n  }\n\n  function rules() {\n    setPopUpButtonText(\"OK!\")\n    setPopUptext(\"Rules\")\n    setPopUpFunc(x => popUpButton)\n    setPopupDisplay(\"block\")\n  }\n\n  function handleChangeForm2(event) {\n    var value = event.target.value\n    setPlayers(players.map(player => {\n      if (player.name === event.target.id) {\n        player.role = value\n      }\n      return player  \n    }))\n  }\n\n  function handleChangeNightForm(event) {\n    setKillSelected(event.target.options[event.target.selectedIndex].id)\n  }\n\n  function handleKill(event) {\n    event.preventDefault()\n    if (killSelected !== \"\") {\n      setPlayers(players.map(player => {\n        if (player.name === killSelected) {\n          player.alive = false\n        }\n        return player\n      }))\n      setNightFormDisplay(\"none\")\n      setGameText(killSelected + \" \" + \"was killed!\")\n      setGameButtonFunc(x => checkWolvesWin)\n      setGameButtonDisplay(\"block\")\n    } else {\n      setPopUpButtonText(\"OK!\")\n      setPopUptext(\"Please select who to kill\")\n      setPopUpFunc(x => popUpButton)\n      setPopupDisplay(\"block\")\n    }\n  }\n\n  function checkWolvesWin() {\n    var villagersAlive = []\n    players.map(x => {\n      if (x.role === \"Villager\" && x.alive === true) {\n        villagersAlive.push(x.name)\n      }\n    })\n    if (villagersAlive.length === 0) {\n      setPopUpButtonText(\"Play Again!\")\n      setPopUptext(\"Werewolves won!\")\n      setPopUpFunc(x => playAgain)\n      setPopupDisplay(\"block\")\n    } else {\n      day()\n    }\n  }\n\n  function checkVillagersWin() {\n    var wolvesAlive = []\n    var villagerAlive = []\n    players.map(x => {\n      if (x.role === \"Werewolf\" && x.alive === true) {\n        wolvesAlive.push(x.name)\n      } else if (x.role === \"Villager\" && x.alive === true) {\n        villagerAlive.push(x.name)\n      }\n    })\n    if (wolvesAlive.length === 0) {\n      setPopUpButtonText(\"Play Again!\")\n      setPopUptext(\"Villagers won!\")\n      setPopUpFunc(x => playAgain)\n      setPopupDisplay(\"block\")\n    } else if (villagerAlive.length === 0){\n      setPopUpButtonText(\"Play Again!\")\n      setPopUptext(\"Werewolves won!\")\n      setPopUpFunc(x => playAgain)\n      setPopupDisplay(\"block\")\n    } else {\n      night()\n    }\n  }\n\n  function handleChangeDayForm(event) {\n    setKickSelected(event.target.options[event.target.selectedIndex].id)\n  }\n\n  function handleKick(event) {\n    event.preventDefault()\n    if (kickSelected !== \"\") {\n      setPlayers(players.map(player => {\n        if (player.name === kickSelected) {\n          player.alive = false\n        }\n        return player\n      }))\n      setDayFormDisplay(\"none\")\n      setGameText(kickSelected + \" \" + \"was kicked!\")\n      setGameButtonDisplay(\"block\")\n      setGameButtonFunc(x => checkVillagersWin)\n    } else {\n      setPopUpButtonText(\"OK!\")\n      setPopUptext(\"Please select who to kick\")\n      setPopUpFunc(x => popUpButton)\n      setPopupDisplay(\"block\")\n    }\n  }\n\n  function day() {\n    setGameText(\"Day Phase!\")\n    setBgColor(\"background: white\")\n    setDayFormDisplay(\"block\")\n    setGameButtonDisplay(\"none\")\n  }\n\n  function callPopUp() {\n    setPopUpButtonText(\"OK!\")\n    setPopUptext(\"You need to have at least 6 players + moderator\")\n    setPopUpFunc(x => popUpButton)\n    setPopupDisplay(\"block\")\n  }\n\n  document.body.style = bgColor\n  return(\n    <div>\n      <Header />\n      {/*<h2>{JSON.stringify(players)}</h2>\n      <h2>{JSON.stringify(killSelected)}</h2>\n      <h2>{JSON.stringify(kickSelected)}</h2>*/}\n      <GameText text={gameText} display={visibilityGameText} />\n      <Form1 display={visibilityForm1} players={players} onClick={handleClickForm1} value={inputText} onChange={onChangeForm1} />\n      <Form2 onChange={handleChangeForm2} display={visibilityForm2} players={players} />\n      <NightForm handleKill={handleKill} value={killSelected} onChange={handleChangeNightForm} players={players} display={nightFormDisplay} />\n      <DayForm handleKick={handleKick} onChange={handleChangeDayForm} players={players} display={dayFormDisplay} />\n      <GameButton callPopUp={callPopUp} players={players} display={gameButtonDisplay} buttonText={gameButtonText} onClick={gameButtonFunc} />\n      <img className=\"werewolfImage\" src={Werewolf} alt=\"werewolf\" width=\"440px\" height=\"624px\"></img>\n      <img className=\"villagerImage\" src={Villager} alt=\"villager\" width=\"480px\" height=\"580px\"></img>\n      <FooterButtons playagain={playAgain} rules={rules} />\n      <PopUp popUpText={popUpText} text={popUpButtonText} onClick={popUpFunc} display={popupDisplay} />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}